#!/bin/sh

set -e

PATH=$PATH:~/.local/bin

if ! which aws 2>&1 >/dev/null; then
	echo "Installing awscli..."
	pip3 install wheel
	pip3 install awscli
fi

RELEASE=$1
TARGET=$2
EXTENSION=$3
DTB=$4
REF=$5

BASE_FILENAME=cip-core-image-cip-core-$RELEASE-$TARGET
if [ "${EXTENSION}" != "none" ] ; then
	if [ "${EXTENSION}" = "security" ] ; then
		BASE_FILENAME=cip-core-image-$EXTENSION-cip-core-$RELEASE-$TARGET
	else
		BASE_FILENAME=cip-core-image-cip-core-$RELEASE-$TARGET-$EXTENSION
	fi
fi

BASE_PATH=build/tmp/deploy/images/$TARGET/$BASE_FILENAME
S3_TARGET=s3://download2.cip-project.org/cip-core/$REF/$TARGET/

if [ -f $BASE_PATH.wic ] ; then
	echo "Compressing $BASE_FILENAME.wic..."
	xz -9 -k -T0 $BASE_PATH.wic

	echo "Uploading artifacts..."
	aws s3 cp --no-progress --acl public-read $BASE_PATH.wic.xz ${S3_TARGET}
fi

if [ -f $BASE_PATH.tar.gz ]; then
	echo "Uploading artifacts..."
	aws s3 cp --no-progress --acl public-read $BASE_PATH.tar.gz ${S3_TARGET}
fi

KERNEL_IMAGE="$BASE_PATH-vmlinu[xz]"
# iwg20m workaround
if [ -f build/tmp/deploy/images/$TARGET/zImage ]; then
	KERNEL_IMAGE=build/tmp/deploy/images/$TARGET/zImage
fi
aws s3 cp --no-progress --acl public-read $KERNEL_IMAGE ${S3_TARGET}
aws s3 cp --no-progress --acl public-read $BASE_PATH-initrd.img ${S3_TARGET}

if [ "$DTB" != "none" ]; then
	aws s3 cp --no-progress --acl public-read build/tmp/deploy/images/*/$DTB ${S3_TARGET}
fi

# Deploy the dpkg status file (/var/lib/dpkg/status) to AWS for the CIP CVE checker (cip-core-sec)
# to periodically extract and report pending CVEs.
# * CI builds will override the previous dpkg status file
# * Released images will contain the commit_id in the file name, and will not be automatically overriden
#   * they have to be signed and released separately from the CI
# * CVE checks will only scan the latest builds, and the released images
# * AWS S3 bucket structure
#   * download.cip-project.org/cip-core/cve-checks/
#     * dpkg-status: folder to store the dpkg status files generated by the CI and released images
#     * cve-reports: folder to store the cve-reports generated from the dpkg status files
#       * they can be linked from the release website
DPKG_STATUS_FILENAME=${CI_JOB_NAME#build:}.dpkg_status
aws s3 cp --no-progress $BASE_PATH.dpkg_status s3://download.cip-project.org/cip-core/cve-checks/dpkg-status/$RELEASE/$DPKG_STATUS_FILENAME
